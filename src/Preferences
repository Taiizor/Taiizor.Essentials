#region derleme Microsoft.Maui.Essentials, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// C:\Users\Taiizor\.nuget\packages\microsoft.maui.essentials.ref.android\6.0.540\ref\net6.0-android30.0\Microsoft.Maui.Essentials.dll
#endregion

#nullable enable

using System;
using System.Diagnostics.CodeAnalysis;

namespace Microsoft.Maui.Storage
{
    //
    // Özet:
    //     A class to interact with the preferences/settings of the native platform.
    //
    // Açıklamalar:
    //     Each platform uses the platform provided native APIs for storing application/user
    //     preferences:
    //     • iOS: NSUserDefaults –
    //     • Android: SharedPreferences –
    //     • UWP: ApplicationDataContainer –
    public static class Preferences
    {
        public static IPreferences Default { get; }

        //
        // Özet:
        //     Clears all keys and values.
        public static void Clear();
        //
        // Özet:
        //     Clears all keys and values.
        //
        // Parametreler:
        //   sharedName:
        //     Shared container name.
        public static void Clear(string? sharedName);
        //
        // Özet:
        //     Checks the existence of a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        // Döndürülenler:
        //     Returns true if the key exists.
        public static bool ContainsKey(string key);
        //
        // Özet:
        //     Checks the existence of a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   sharedName:
        //     Shared container name.
        //
        // Döndürülenler:
        //     Returns true if the key exists.
        public static bool ContainsKey(string key, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static DateTime Get(string key, DateTime defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static DateTime Get(string key, DateTime defaultValue);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static long Get(string key, long defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static float Get(string key, float defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static double Get(string key, double defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static int Get(string key, int defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static bool Get(string key, bool defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        //   sharedName:
        //     Shared container key.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        [return: NotNullIfNotNull("defaultValue")]
        public static string? Get(string key, string? defaultValue, string? sharedName);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static double Get(string key, double defaultValue);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static bool Get(string key, bool defaultValue);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static int Get(string key, int defaultValue);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static float Get(string key, float defaultValue);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        public static long Get(string key, long defaultValue);
        //
        // Özet:
        //     Gets the value for a given key, or the default specified if the key does not
        //     exist.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   defaultValue:
        //     Default value to return if the key does not exist.
        //
        // Döndürülenler:
        //     Value for the given key, or the default if it does not exist.
        [return: NotNullIfNotNull("defaultValue")]
        public static string? Get(string key, string? defaultValue);
        //
        // Özet:
        //     Removes a key and its associated value if it exists.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   sharedName:
        //     Shared container name.
        public static void Remove(string key, string? sharedName);
        //
        // Özet:
        //     Removes a key and its associated value if it exists.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        public static void Remove(string key);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, bool value);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, string? value);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, DateTime value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, double value);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, string? value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, bool value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, int value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, double value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, float value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        //
        //   sharedName:
        //     Shared container name.
        public static void Set(string key, long value, string? sharedName);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, int value);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, DateTime value);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, long value);
        //
        // Özet:
        //     Sets a value for a given key.
        //
        // Parametreler:
        //   key:
        //     Preference key.
        //
        //   value:
        //     Preference value.
        public static void Set(string key, float value);
    }
}